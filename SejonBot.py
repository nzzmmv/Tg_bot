import telebot
from telebot import types

TOKEN = "8349223686:AAFBn4IgVS6M1n_0LYQjdZDl-dgF88ppm0E"
bot = telebot.TeleBot(TOKEN, parse_mode="HTML")

# user_id -> "tg" | "ru"
user_lang = {}

CATEGORIES = {"learning", "events", "center", "students"}

# –°–ª–æ–≤–∞—Ä—å —Å —Ç–µ–∫—Å—Ç–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–¥–ø—É–Ω–∫—Ç–∞
DATA = {
    "ru": {
        "learning_1": "<b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:</b>\n–ù–∞—à–∏ –∑–∞–Ω—è—Ç–∏—è –ø—Ä–æ—Ö–æ–¥—è—Ç –ø–æ –±—É–¥–Ω—è–º —Å 10:00 –¥–æ 18:00. –í–æ–∑–º–æ–∂–Ω—ã –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è –ø–æ –¥–æ–≥–æ–≤–æ—Ä—ë–Ω–Ω–æ—Å—Ç–∏.",
        "learning_2": "<b>–¶–µ–Ω–∞:</b>\n–ú–µ—Å—è—á–Ω—ã–π –∞–±–æ–Ω–µ–º–µ–Ω—Ç —Å—Ç–æ–∏—Ç 500 —Å–æ–º–æ–Ω–∏. –ü–µ—Ä–≤–æ–µ –ø—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ.",
        "learning_3": "<b>–ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è:</b>\n–î–ª—è –∑–∞–ø–∏—Å–∏ –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –∫ –Ω–∞–º –≤ –æ—Ñ–∏—Å —Å –ø–∞—Å–ø–æ—Ä—Ç–æ–º –∏–ª–∏ –∑–≤–æ–Ω–∏—Ç–µ –ø–æ –Ω–æ–º–µ—Ä—É: +992 (—Ö—Ö—Ö) —Ö—Ö—Ö-—Ö—Ö—Ö.",
        "learning_4": "<b>–î–æ–∫—É–º–µ–Ω—Ç—ã:</b>\n–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º –ø–∞—Å–ø–æ—Ä—Ç –∏ 2 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ 3x4.",
        "events_1": "<b>–ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:</b>\n–ú—ã —Ä–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–æ–¥–∏–º –≤–µ—á–µ—Ä–∞ –ø–æ—ç–∑–∏–∏ –∏ –∫–∏–Ω–æ–ø–æ–∫–∞–∑—ã, –ø–æ—Å–≤—è—â—ë–Ω–Ω—ã–µ –∫—É–ª—å—Ç—É—Ä–µ –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω–∞.",
        "events_2": "<b>–ö–∞–ª–µ–Ω–¥–∞—Ä—å —Å–æ–±—ã—Ç–∏–π:</b>\n–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–∞—à–∏–º–∏ –∞–Ω–æ–Ω—Å–∞–º–∏ –≤ Telegram-–∫–∞–Ω–∞–ª–µ!",
        "events_3": "<b>–ö–æ–Ω–∫—É—Ä—Å—ã/–û–ª–∏–º–ø–∏–∞–¥—ã:</b>\n–ï–∂–µ–≥–æ–¥–Ω–æ –º—ã –ø—Ä–æ–≤–æ–¥–∏–º –æ–ª–∏–º–ø–∏–∞–¥—É –ø–æ —Ä—É—Å—Å–∫–æ–º—É —è–∑—ã–∫—É —Å—Ä–µ–¥–∏ –Ω–∞—à–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.",
        "center_1": "<b>–ê–¥—Ä–µ—Å + –∫–∞—Ä—Ç–∞:</b>\n–ù–∞—à –∞–¥—Ä–µ—Å: –≥. –î—É—à–∞–Ω–±–µ, —É–ª. –†—É–¥–∞–∫–∏, 122.",
        "center_2": "<b>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</b>\n–¢–µ–ª–µ—Ñ–æ–Ω: +992 (999) 888-777\nE-mail: info@center.tj",
        "center_3": "<b>–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã:</b>\n–ü–Ω-–ü—Ç: 09:00 - 19:00\n–°–±: 10:00 - 15:00\n–í—Å: –í—ã—Ö–æ–¥–Ω–æ–π",
        "center_4": "<b>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏:</b>\n–ù–∞—à–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ ‚Äî —ç—Ç–æ –æ–ø—ã—Ç–Ω—ã–µ –Ω–æ—Å–∏—Ç–µ–ª–∏ —è–∑—ã–∫–∞ —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º.",
        "students_1": "<b>–î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è:</b>\n–î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —á–∞—Ç–µ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.",
        "students_2": "<b>–ê—É–¥–∏–æ/–í–∏–¥–µ–æ:</b>\n–í–µ—Å—å —É—á–µ–±–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ.",
        "students_3": "<b>–°–∏—Å—Ç–µ–º–∞ —É—Ä–æ–≤–Ω–µ–π:</b>\n–£ –Ω–∞—Å –µ—Å—Ç—å 6 —É—Ä–æ–≤–Ω–µ–π –æ–±—É—á–µ–Ω–∏—è, –æ—Ç A1 –¥–æ C2.",
        "students_4": "<b>–ß–∞—Ç —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏:</b>\n–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é –≤ –Ω–∞—à–µ–º —á–∞—Ç–µ —Å 9:00 –¥–æ 18:00.",
    },
    "tg": {
        "learning_1": "<b>–ù–∞“õ—à–∞–∏ –¥–∞—Ä—Å“≥–æ:</b>\n–î–∞—Ä—Å“≥–æ–∏ –º–æ “≥–∞—Ä —Ä”Ø–∑“≥–æ–∏ –∫–æ—Ä”£ –∞–∑ —Å–æ–∞—Ç–∏ 10:00 —Ç–æ 18:00 –±–∞—Ä–≥—É–∑–æ—Ä –º–µ—à–∞–≤–∞–Ω–¥. –î–∞—Ä—Å“≥–æ–∏ –∏–Ω—Ñ–∏—Ä–æ–¥”£ –Ω–∏–∑ –∏–º–∫–æ–Ω–ø–∞–∑–∏—Ä–∞–Ω–¥.",
        "learning_2": "<b>–ù–∞—Ä—Ö:</b>\n–ù–∞—Ä—Ö–∏ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∏ –º–æ“≥–æ–Ω–∞ 500 —Å–æ–º–æ–Ω”£ –∞—Å—Ç. –î–∞—Ä—Å–∏ –∞–≤–≤–∞–ª–∏ —Ç–∞“∑—Ä–∏–±–∞–≤”£ —Ä–æ–π–≥–æ–Ω –∞—Å—Ç.",
        "learning_3": "<b>–ß”£ —Ç–∞–≤—Ä —Å–∞–±—Ç–∏ –Ω–æ–º —à–∞–≤–µ–º:</b>\n–ë–∞—Ä–æ–∏ —Å–∞–±—Ç–∏ –Ω–æ–º –±–æ —à–∏–Ω–æ—Å–Ω–æ–º–∞ –±–∞ –∏–¥–æ—Ä–∞–∏ –º–æ –º—É—Ä–æ“∑–∏–∞—Ç –∫—É–Ω–µ–¥ —ë –±–∞ —Ä–∞“õ–∞–º–∏ +992 (—Ö—Ö—Ö) —Ö—Ö—Ö-—Ö—Ö—Ö –∑–∞–Ω–≥ –∑–∞–Ω–µ–¥.",
        "learning_4": "<b>“≤—É“∑“∑–∞—Ç“≥–æ:</b>\n–ë–∞—Ä–æ–∏ —Å–∞–±—Ç–∏ –Ω–æ–º —à–∏–Ω–æ—Å–Ω–æ–º–∞ –≤–∞ 2 –∞–∫—Å–∏ 3—Ö4 –ª–æ–∑–∏–º –∞—Å—Ç.",
        "events_1": "<b>–§–∞—ä–æ–ª–∏—è—Ç“≥–æ–∏ —Ñ–∞—Ä“≥–∞–Ω–≥”£:</b>\n–ú–æ –º—É–Ω—Ç–∞–∑–∞–º —à–æ–º“≥–æ–∏ —à–µ—ä—Ä—É —Ñ–∏–ª–º–±–∞—Ä–¥–æ—Ä–∏–∏ —Ñ–∞—Ä“≥–∞–Ω–≥–∏ —Ç–æ“∑–∏–∫–∏—Ä–æ –±–∞—Ä–≥—É–∑–æ—Ä –º–µ–∫—É–Ω–µ–º.",
        "events_2": "<b>–¢–∞“õ–≤–∏–º–∏ —Ä”Ø–π–¥–æ–¥“≥–æ:</b>\n–•–∞–±–∞—Ä“≥–æ–∏ –º–æ—Ä–æ –¥–∞—Ä –∫–∞–Ω–∞–ª–∏ Telegram –ø–∞–π–≥–∏—Ä”£ –∫—É–Ω–µ–¥!",
        "events_3": "<b>–û–∑–º—É–Ω“≥–æ/–û–ª–∏–º–ø–∏–∞–¥–∞“≥–æ:</b>\n–ú–æ “≥–∞—Ä —Å–æ–ª –¥–∞—Ä –±–∞–π–Ω–∏ –¥–æ–Ω–∏—à“∑”Ø—ë–Ω –æ–ª–∏–º–ø–∏–∞–¥–∞–∏ –∑–∞–±–æ–Ω–∏ —Ä—É—Å–∏—Ä–æ –±–∞—Ä–≥—É–∑–æ—Ä –º–µ–Ω–∞–º–æ–µ–º.",
        "center_1": "<b>–°—É—Ä–æ“ì–∞ + —Ö–∞—Ä–∏—Ç–∞:</b>\n–°—É—Ä–æ“ì–∞–∏ –º–æ: —à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á–∞–∏ –†”Ø–¥–∞–∫”£, 122.",
        "center_2": "<b>–ê–ª–æ“õ–∞:</b>\n–¢–µ–ª–µ—Ñ–æ–Ω: +992 (999) 888-777\nE-mail: info@center.tj",
        "center_3": "<b>–°–æ–∞—Ç“≥–æ–∏ –∫–æ—Ä”£:</b>\n–î—à-“∂–º: 09:00 - 19:00\n–®–Ω: 10:00 - 15:00\n–Ø–∫—à: –†”Ø–∑–∏ –∏—Å—Ç–∏—Ä–æ“≥–∞—Ç”£",
        "center_4": "<b>–û–º”Ø–∑–≥–æ—Ä–æ–Ω:</b>\n–û–º”Ø–∑–≥–æ—Ä–æ–Ω–∏ –º–æ –º—É—Ç–∞—Ö–∞—Å—Å–∏—Å–æ–Ω–∏ –±–æ—Ç–∞“∑—Ä–∏–±–∞ –≤–∞ –¥–æ—Ä–∞–Ω–¥–∞–≥–æ–Ω–∏ –∑–∞–±–æ–Ω –º–µ–±–æ—à–∞–Ω–¥.",
        "students_1": "<b>–í–∞–∑–∏—Ñ–∞“≥–æ–∏ —Ö–æ–Ω–∞–≥”£:</b>\n–í–∞–∑–∏—Ñ–∞“≥–æ–∏ —Ö–æ–Ω–∞–≥”£ –¥–∞—Ä —á–∞—Ç–∏ –º–∞—Ö—Å—É—Å–∏ –¥–æ–Ω–∏—à“∑”Ø—ë–Ω –Ω–∞—à—Ä –º–µ—à–∞–≤–∞–Ω–¥.",
        "students_2": "<b>–ê—É–¥–∏–æ/–í–∏–¥–µ–æ:</b>\n“≤–∞–º–∞–∏ –º–∞–≤–æ–¥–∏ —Ç–∞—ä–ª–∏–º”£ –¥–∞—Ä –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–∏ –º–æ –¥–∞—Å—Ç—Ä–∞—Å –∞—Å—Ç.",
        "students_3": "<b>–°–∏—Å—Ç–µ–º–∞–∏ —Å–∞—Ç“≥“≥–æ:</b>\n–ú–æ 6 —Å–∞—Ç“≥–∏ –æ–º”Ø–∑–∏—à –¥–æ—Ä–µ–º, –∞–∑ A1 —Ç–æ C2.",
        "students_4": "<b>–ß–∞—Ç –±–æ –æ–º”Ø–∑–≥–æ—Ä–æ–Ω:</b>\n–®—É–º–æ –º–µ—Ç–∞–≤–æ–Ω–µ–¥ —Å–∞–≤–æ–ª“≥–æ–∏ —Ö—É–¥—Ä–æ –±–∞ –æ–º”Ø–∑–≥–æ—Ä –¥–∞—Ä —á–∞—Ç–∏ –º–æ –∞–∑ —Å–æ–∞—Ç–∏ 9:00 —Ç–æ 18:00 –¥–∏“≥–µ–¥.",
    },
}


# ====== /start ======
@bot.message_handler(commands=["start"])
def start(message: types.Message):
    kb = types.InlineKeyboardMarkup(row_width=2)
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–µ–≤–∏–¥–∏–º—ã–π —Å–∏–º–≤–æ–ª –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—Å—Ç—É–ø–∞.
    kb.add(
        types.InlineKeyboardButton("üáπüáØ –¢–∞–¥–∂–∏–∫—Å–∫–∏–π", callback_data="lang_tg"),
        types.InlineKeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data="lang_ru"),
    )
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:", reply_markup=kb)


# ====== –í—ã–±–æ—Ä —è–∑—ã–∫–∞ ======
@bot.callback_query_handler(func=lambda c: c.data in {"lang_tg", "lang_ru"})
def on_lang_pick(call: types.CallbackQuery):
    uid = call.from_user.id
    user_lang[uid] = "tg" if call.data == "lang_tg" else "ru"
    bot.delete_message(call.message.chat.id, call.message.message_id)
    send_main_menu(call.message.chat.id, user_lang[uid])
    bot.answer_callback_query(call.id)


# ====== –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ======
def send_main_menu(chat_id, lang):
    kb = types.InlineKeyboardMarkup(row_width=1)
    if lang == "tg":
        kb.add(
            types.InlineKeyboardButton("üìö –î–∞—Ä—Å“≥–æ" + " " * 10, callback_data="learning"),
            types.InlineKeyboardButton("üéâ –§–∞—ä–æ–ª–∏—è—Ç“≥–æ" + " " * 10, callback_data="events"),
            types.InlineKeyboardButton("üìç –ú–∞—Ä–∫–∞–∑" + " " * 10, callback_data="center"),
            types.InlineKeyboardButton("üìë –ë–∞—Ä–æ–∏ –¥–æ–Ω–∏—à“∑”Ø—ë–Ω" + " " * 10, callback_data="students"),
        )
        text = "üì© –®—É–º–æ —á”£ –º–µ—Ö–æ—Å—Ç–µ–¥ –¥–æ–Ω–µ–¥?"
    else:
        kb.add(
            types.InlineKeyboardButton("üìö –û–±—É—á–µ–Ω–∏–µ" + " " * 10, callback_data="learning"),
            types.InlineKeyboardButton("üéâ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è" + " " * 10, callback_data="events"),
            types.InlineKeyboardButton("üìç –¶–µ–Ω—Ç—Ä" + " " * 10, callback_data="center"),
            types.InlineKeyboardButton("üìë –î–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤" + " " * 10, callback_data="students"),
        )
        text = "üì© –ß—Ç–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ —É–∑–Ω–∞—Ç—å?"
    bot.send_message(chat_id, text, reply_markup=kb)


# ====== –ü–æ–¥–º–µ–Ω—é ======
def show_submenu(chat_id, lang, category):
    kb = types.InlineKeyboardMarkup(row_width=1)

    items = {
        "learning": ["üïê –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", "üíµ –¶–µ–Ω–∞", "üìù –ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è", "üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã"],
        "events": ["üéâ –ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", "üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å —Å–æ–±—ã—Ç–∏–π", "üé§ –ö–æ–Ω–∫—É—Ä—Å—ã/–û–ª–∏–º–ø–∏–∞–¥—ã"],
        "center": ["üìç –ê–¥—Ä–µ—Å + –∫–∞—Ä—Ç–∞", "‚òéÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã", "‚è∞ –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã", "üë©‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏"],
        "students": ["üìë –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è", "üéß –ê—É–¥–∏–æ/–í–∏–¥–µ–æ", "üèÜ –°–∏—Å—Ç–µ–º–∞ —É—Ä–æ–≤–Ω–µ–π", "üí¨ –ß–∞—Ç —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏"],
    }

    # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è
    max_len = max(len(text) for text in items[category])

    for i, text in enumerate(items[category], 1):
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã, —á—Ç–æ–±—ã –≤—ã—Ä–æ–≤–Ω—è—Ç—å —Ç–µ–∫—Å—Ç.
        # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–±–µ–ª–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–∏.
        spaces_count = max_len - len(text)
        kb.add(types.InlineKeyboardButton(text + " " * spaces_count, callback_data=f"{category}_{i}"))

    # –Ω–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ
    kb.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_main"))

    titles = {
        "learning": "üìö –û–±—É—á–µ–Ω–∏–µ:" if lang == "ru" else "üìö –î–∞—Ä—Å“≥–æ:",
        "events": "üéâ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:" if lang == "ru" else "üéâ –§–∞—ä–æ–ª–∏—è—Ç“≥–æ:",
        "center": "üìç –¶–µ–Ω—Ç—Ä:" if lang == "ru" else "üìç –ú–∞—Ä–∫–∞–∑:",
        "students": "üìë –î–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:" if lang == "ru" else "üìë –ë–∞—Ä–æ–∏ –¥–æ–Ω–∏—à“∑”Ø—ë–Ω:",
    }

    bot.send_message(chat_id, titles[category], reply_markup=kb)


# ====== –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–≥–ª–∞–≤–Ω–æ–µ ‚Üí –ø–æ–¥–º–µ–Ω—é) ======
@bot.callback_query_handler(func=lambda c: c.data in CATEGORIES)
def on_category_pick(call: types.CallbackQuery):
    uid = call.from_user.id
    lang = user_lang.get(uid, "ru")
    bot.delete_message(call.message.chat.id, call.message.message_id)
    show_submenu(call.message.chat.id, lang, call.data)
    bot.answer_callback_query(call.id)


# ====== –ü–æ–¥–ø—É–Ω–∫—Ç—ã (–ø–æ–¥–º–µ–Ω—é ‚Üí –¥–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ) ======
# –°—Ç—Ä–æ–≥–∏–π —Ñ–∏–ª—å—Ç—Ä: <category>_<number>, –Ω–∞–ø—Ä–∏–º–µ—Ä "learning_1"
@bot.callback_query_handler(
    func=lambda c: (
            "_" in c.data
            and c.data.split("_", 1)[0] in CATEGORIES
            and c.data.split("_", 1)[1].isdigit()
    )
)
def on_subitem_pick(call: types.CallbackQuery):
    category = call.data.split("_", 1)[0]
    subitem_key = call.data
    lang = user_lang.get(call.from_user.id, "ru")  # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"{category}_back"))

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ —Å–ª–æ–≤–∞—Ä—è DATA. –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–ª—É—à–∫—É.
    text = DATA[lang].get(subitem_key, "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Ä–∞–∑–¥–µ–ª—É —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∞.")

    bot.delete_message(call.message.chat.id, call.message.message_id)
    bot.send_message(call.message.chat.id, text, reply_markup=kb)
    bot.answer_callback_query(call.id)


# ====== –ù–∞–∑–∞–¥ –∫ –ø–æ–¥–º–µ–Ω—é (–∏–∑ –ø–æ–¥–ø—É–Ω–∫—Ç–∞) ======
@bot.callback_query_handler(
    func=lambda c: c.data.endswith("_back") and c.data.split("_", 1)[0] in CATEGORIES
)
def back_to_submenu(call: types.CallbackQuery):
    uid = call.from_user.id
    lang = user_lang.get(uid, "ru")
    category = call.data.split("_", 1)[0]
    bot.delete_message(call.message.chat.id, call.message.message_id)
    show_submenu(call.message.chat.id, lang, category)
    bot.answer_callback_query(call.id)


# ====== –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ (–∏–∑ –ø–æ–¥–º–µ–Ω—é) ======
@bot.callback_query_handler(func=lambda c: c.data == "back_main")
def back_to_main(call: types.CallbackQuery):
    uid = call.from_user.id
    lang = user_lang.get(uid, "ru")
    bot.delete_message(call.message.chat.id, call.message.message_id)
    send_main_menu(call.message.chat.id, lang)
    bot.answer_callback_query(call.id)


if __name__ == "__main__":
    bot.polling(none_stop=True)